(ns clojure.test-clojure.generated-functional-adapters-in-def-requiring-reflection
  (:use clojure.test)
  (:require [clojure.string :as str])
  (:import (clojure.test AdapterExerciser)))

(deftest functional-adapters-in-def
  (def exerciser (AdapterExerciser.))
  (def LLadapter (fn [^long a] (long 1)))
  (is (= (.methodLL exerciser LLadapter) 0))
  (def DLadapter (fn [^double a] (long 1)))
  (is (= (.methodDL exerciser DLadapter) 1))
  (def OLadapter (fn [^AdapterExerciser a] (long 1)))
  (is (= (.methodOL exerciser OLadapter) 2))
  (def LIadapter (fn [^long a] 1))
  (is (= (.methodLI exerciser LIadapter) 3))
  (def DIadapter (fn [^double a] 1))
  (is (= (.methodDI exerciser DIadapter) 4))
  (def OIadapter (fn [^AdapterExerciser a] 1))
  (is (= (.methodOI exerciser OIadapter) 5))
  (def LSadapter (fn [^long a] (short 1)))
  (is (= (.methodLS exerciser LSadapter) 6))
  (def DSadapter (fn [^double a] (short 1)))
  (is (= (.methodDS exerciser DSadapter) 7))
  (def OSadapter (fn [^AdapterExerciser a] (short 1)))
  (is (= (.methodOS exerciser OSadapter) 8))
  (def LBadapter (fn [^long a] (byte 1)))
  (is (= (.methodLB exerciser LBadapter) 9))
  (def DBadapter (fn [^double a] (byte 1)))
  (is (= (.methodDB exerciser DBadapter) 10))
  (def OBadapter (fn [^AdapterExerciser a] (byte 1)))
  (is (= (.methodOB exerciser OBadapter) 11))
  (def LDadapter (fn [^long a] (double 1)))
  (is (= (.methodLD exerciser LDadapter) 12))
  (def DDadapter (fn [^double a] (double 1)))
  (is (= (.methodDD exerciser DDadapter) 13))
  (def ODadapter (fn [^AdapterExerciser a] (double 1)))
  (is (= (.methodOD exerciser ODadapter) 14))
  (def LFadapter (fn [^long a] (float 1)))
  (is (= (.methodLF exerciser LFadapter) 15))
  (def DFadapter (fn [^double a] (float 1)))
  (is (= (.methodDF exerciser DFadapter) 16))
  (def OFadapter (fn [^AdapterExerciser a] (float 1)))
  (is (= (.methodOF exerciser OFadapter) 17))
  (def LZadapter (fn [^long a] false))
  (is (= (.methodLZ exerciser LZadapter) 18))
  (def DZadapter (fn [^double a] false))
  (is (= (.methodDZ exerciser DZadapter) 19))
  (def OZadapter (fn [^AdapterExerciser a] false))
  (is (= (.methodOZ exerciser OZadapter) 20))
  (def LOadapter (fn [^long a] exerciser))
  (is (= (.methodLO exerciser LOadapter) 21))
  (def DOadapter (fn [^double a] exerciser))
  (is (= (.methodDO exerciser DOadapter) 22))
  (def OOadapter (fn [^AdapterExerciser a] exerciser))
  (is (= (.methodOO exerciser OOadapter) 23))
  (def LLLadapter (fn [^long a ^long b] (long 1)))
  (is (= (.methodLLL exerciser LLLadapter) 24))
  (def LOLadapter (fn [^long a ^AdapterExerciser b] (long 1)))
  (is (= (.methodLOL exerciser LOLadapter) 25))
  (def OLLadapter (fn [^AdapterExerciser a ^long b] (long 1)))
  (is (= (.methodOLL exerciser OLLadapter) 26))
  (def DDLadapter (fn [^double a ^double b] (long 1)))
  (is (= (.methodDDL exerciser DDLadapter) 27))
  (def LDLadapter (fn [^long a ^double b] (long 1)))
  (is (= (.methodLDL exerciser LDLadapter) 28))
  (def DLLadapter (fn [^double a ^long b] (long 1)))
  (is (= (.methodDLL exerciser DLLadapter) 29))
  (def OOLadapter (fn [^AdapterExerciser a ^AdapterExerciser b] (long 1)))
  (is (= (.methodOOL exerciser OOLadapter) 30))
  (def ODLadapter (fn [^AdapterExerciser a ^double b] (long 1)))
  (is (= (.methodODL exerciser ODLadapter) 31))
  (def DOLadapter (fn [^double a ^AdapterExerciser b] (long 1)))
  (is (= (.methodDOL exerciser DOLadapter) 32))
  (def LLIadapter (fn [^long a ^long b] 1))
  (is (= (.methodLLI exerciser LLIadapter) 33))
  (def LOIadapter (fn [^long a ^AdapterExerciser b] 1))
  (is (= (.methodLOI exerciser LOIadapter) 34))
  (def OLIadapter (fn [^AdapterExerciser a ^long b] 1))
  (is (= (.methodOLI exerciser OLIadapter) 35))
  (def DDIadapter (fn [^double a ^double b] 1))
  (is (= (.methodDDI exerciser DDIadapter) 36))
  (def LDIadapter (fn [^long a ^double b] 1))
  (is (= (.methodLDI exerciser LDIadapter) 37))
  (def DLIadapter (fn [^double a ^long b] 1))
  (is (= (.methodDLI exerciser DLIadapter) 38))
  (def OOIadapter (fn [^AdapterExerciser a ^AdapterExerciser b] 1))
  (is (= (.methodOOI exerciser OOIadapter) 39))
  (def ODIadapter (fn [^AdapterExerciser a ^double b] 1))
  (is (= (.methodODI exerciser ODIadapter) 40))
  (def DOIadapter (fn [^double a ^AdapterExerciser b] 1))
  (is (= (.methodDOI exerciser DOIadapter) 41))
  (def LLSadapter (fn [^long a ^long b] (short 1)))
  (is (= (.methodLLS exerciser LLSadapter) 42))
  (def LOSadapter (fn [^long a ^AdapterExerciser b] (short 1)))
  (is (= (.methodLOS exerciser LOSadapter) 43))
  (def OLSadapter (fn [^AdapterExerciser a ^long b] (short 1)))
  (is (= (.methodOLS exerciser OLSadapter) 44))
  (def DDSadapter (fn [^double a ^double b] (short 1)))
  (is (= (.methodDDS exerciser DDSadapter) 45))
  (def LDSadapter (fn [^long a ^double b] (short 1)))
  (is (= (.methodLDS exerciser LDSadapter) 46))
  (def DLSadapter (fn [^double a ^long b] (short 1)))
  (is (= (.methodDLS exerciser DLSadapter) 47))
  (def OOSadapter (fn [^AdapterExerciser a ^AdapterExerciser b] (short 1)))
  (is (= (.methodOOS exerciser OOSadapter) 48))
  (def ODSadapter (fn [^AdapterExerciser a ^double b] (short 1)))
  (is (= (.methodODS exerciser ODSadapter) 49))
  (def DOSadapter (fn [^double a ^AdapterExerciser b] (short 1)))
  (is (= (.methodDOS exerciser DOSadapter) 50))
  (def LLBadapter (fn [^long a ^long b] (byte 1)))
  (is (= (.methodLLB exerciser LLBadapter) 51))
  (def LOBadapter (fn [^long a ^AdapterExerciser b] (byte 1)))
  (is (= (.methodLOB exerciser LOBadapter) 52))
  (def OLBadapter (fn [^AdapterExerciser a ^long b] (byte 1)))
  (is (= (.methodOLB exerciser OLBadapter) 53))
  (def DDBadapter (fn [^double a ^double b] (byte 1)))
  (is (= (.methodDDB exerciser DDBadapter) 54))
  (def LDBadapter (fn [^long a ^double b] (byte 1)))
  (is (= (.methodLDB exerciser LDBadapter) 55))
  (def DLBadapter (fn [^double a ^long b] (byte 1)))
  (is (= (.methodDLB exerciser DLBadapter) 56))
  (def OOBadapter (fn [^AdapterExerciser a ^AdapterExerciser b] (byte 1)))
  (is (= (.methodOOB exerciser OOBadapter) 57))
  (def ODBadapter (fn [^AdapterExerciser a ^double b] (byte 1)))
  (is (= (.methodODB exerciser ODBadapter) 58))
  (def DOBadapter (fn [^double a ^AdapterExerciser b] (byte 1)))
  (is (= (.methodDOB exerciser DOBadapter) 59))
  (def LLDadapter (fn [^long a ^long b] (double 1)))
  (is (= (.methodLLD exerciser LLDadapter) 60))
  (def LODadapter (fn [^long a ^AdapterExerciser b] (double 1)))
  (is (= (.methodLOD exerciser LODadapter) 61))
  (def OLDadapter (fn [^AdapterExerciser a ^long b] (double 1)))
  (is (= (.methodOLD exerciser OLDadapter) 62))
  (def DDDadapter (fn [^double a ^double b] (double 1)))
  (is (= (.methodDDD exerciser DDDadapter) 63))
  (def LDDadapter (fn [^long a ^double b] (double 1)))
  (is (= (.methodLDD exerciser LDDadapter) 64))
  (def DLDadapter (fn [^double a ^long b] (double 1)))
  (is (= (.methodDLD exerciser DLDadapter) 65))
  (def OODadapter (fn [^AdapterExerciser a ^AdapterExerciser b] (double 1)))
  (is (= (.methodOOD exerciser OODadapter) 66))
  (def ODDadapter (fn [^AdapterExerciser a ^double b] (double 1)))
  (is (= (.methodODD exerciser ODDadapter) 67))
  (def DODadapter (fn [^double a ^AdapterExerciser b] (double 1)))
  (is (= (.methodDOD exerciser DODadapter) 68))
  (def LLFadapter (fn [^long a ^long b] (float 1)))
  (is (= (.methodLLF exerciser LLFadapter) 69))
  (def LOFadapter (fn [^long a ^AdapterExerciser b] (float 1)))
  (is (= (.methodLOF exerciser LOFadapter) 70))
  (def OLFadapter (fn [^AdapterExerciser a ^long b] (float 1)))
  (is (= (.methodOLF exerciser OLFadapter) 71))
  (def DDFadapter (fn [^double a ^double b] (float 1)))
  (is (= (.methodDDF exerciser DDFadapter) 72))
  (def LDFadapter (fn [^long a ^double b] (float 1)))
  (is (= (.methodLDF exerciser LDFadapter) 73))
  (def DLFadapter (fn [^double a ^long b] (float 1)))
  (is (= (.methodDLF exerciser DLFadapter) 74))
  (def OOFadapter (fn [^AdapterExerciser a ^AdapterExerciser b] (float 1)))
  (is (= (.methodOOF exerciser OOFadapter) 75))
  (def ODFadapter (fn [^AdapterExerciser a ^double b] (float 1)))
  (is (= (.methodODF exerciser ODFadapter) 76))
  (def DOFadapter (fn [^double a ^AdapterExerciser b] (float 1)))
  (is (= (.methodDOF exerciser DOFadapter) 77))
  (def LLZadapter (fn [^long a ^long b] false))
  (is (= (.methodLLZ exerciser LLZadapter) 78))
  (def LOZadapter (fn [^long a ^AdapterExerciser b] false))
  (is (= (.methodLOZ exerciser LOZadapter) 79))
  (def OLZadapter (fn [^AdapterExerciser a ^long b] false))
  (is (= (.methodOLZ exerciser OLZadapter) 80))
  (def DDZadapter (fn [^double a ^double b] false))
  (is (= (.methodDDZ exerciser DDZadapter) 81))
  (def LDZadapter (fn [^long a ^double b] false))
  (is (= (.methodLDZ exerciser LDZadapter) 82))
  (def DLZadapter (fn [^double a ^long b] false))
  (is (= (.methodDLZ exerciser DLZadapter) 83))
  (def OOZadapter (fn [^AdapterExerciser a ^AdapterExerciser b] false))
  (is (= (.methodOOZ exerciser OOZadapter) 84))
  (def ODZadapter (fn [^AdapterExerciser a ^double b] false))
  (is (= (.methodODZ exerciser ODZadapter) 85))
  (def DOZadapter (fn [^double a ^AdapterExerciser b] false))
  (is (= (.methodDOZ exerciser DOZadapter) 86))
  (def LLOadapter (fn [^long a ^long b] exerciser))
  (is (= (.methodLLO exerciser LLOadapter) 87))
  (def LOOadapter (fn [^long a ^AdapterExerciser b] exerciser))
  (is (= (.methodLOO exerciser LOOadapter) 88))
  (def OLOadapter (fn [^AdapterExerciser a ^long b] exerciser))
  (is (= (.methodOLO exerciser OLOadapter) 89))
  (def DDOadapter (fn [^double a ^double b] exerciser))
  (is (= (.methodDDO exerciser DDOadapter) 90))
  (def LDOadapter (fn [^long a ^double b] exerciser))
  (is (= (.methodLDO exerciser LDOadapter) 91))
  (def DLOadapter (fn [^double a ^long b] exerciser))
  (is (= (.methodDLO exerciser DLOadapter) 92))
  (def OOOadapter (fn [^AdapterExerciser a ^AdapterExerciser b] exerciser))
  (is (= (.methodOOO exerciser OOOadapter) 93))
  (def ODOadapter (fn [^AdapterExerciser a ^double b] exerciser))
  (is (= (.methodODO exerciser ODOadapter) 94))
  (def DOOadapter (fn [^double a ^AdapterExerciser b] exerciser))
  (is (= (.methodDOO exerciser DOOadapter) 95))
  (def OOOZadapter (fn [^AdapterExerciser a ^AdapterExerciser b ^AdapterExerciser c] false))
  (is (= (.methodOOOZ exerciser OOOZadapter) 96))
  (def OOOOadapter (fn [^AdapterExerciser a ^AdapterExerciser b ^AdapterExerciser c] exerciser))
  (is (= (.methodOOOO exerciser OOOOadapter) 97))
  (def OOOOZadapter (fn [^AdapterExerciser a ^AdapterExerciser b ^AdapterExerciser c ^AdapterExerciser d] false))
  (is (= (.methodOOOOZ exerciser OOOOZadapter) 98))
  (def OOOOOadapter (fn [^AdapterExerciser a ^AdapterExerciser b ^AdapterExerciser c ^AdapterExerciser d] exerciser))
  (is (= (.methodOOOOO exerciser OOOOOadapter) 99))
  (def OOOOOZadapter (fn [^AdapterExerciser a ^AdapterExerciser b ^AdapterExerciser c ^AdapterExerciser d ^AdapterExerciser e] false))
  (is (= (.methodOOOOOZ exerciser OOOOOZadapter) 100))
  (def OOOOOOadapter (fn [^AdapterExerciser a ^AdapterExerciser b ^AdapterExerciser c ^AdapterExerciser d ^AdapterExerciser e] exerciser))
  (is (= (.methodOOOOOO exerciser OOOOOOadapter) 101))
  (def OOOOOOZadapter (fn [^AdapterExerciser a ^AdapterExerciser b ^AdapterExerciser c ^AdapterExerciser d ^AdapterExerciser e ^AdapterExerciser f] false))
  (is (= (.methodOOOOOOZ exerciser OOOOOOZadapter) 102))
  (def OOOOOOOadapter (fn [^AdapterExerciser a ^AdapterExerciser b ^AdapterExerciser c ^AdapterExerciser d ^AdapterExerciser e ^AdapterExerciser f] exerciser))
  (is (= (.methodOOOOOOO exerciser OOOOOOOadapter) 103))
  (def OOOOOOOZadapter (fn [^AdapterExerciser a ^AdapterExerciser b ^AdapterExerciser c ^AdapterExerciser d ^AdapterExerciser e ^AdapterExerciser f ^AdapterExerciser g] false))
  (is (= (.methodOOOOOOOZ exerciser OOOOOOOZadapter) 104))
  (def OOOOOOOOadapter (fn [^AdapterExerciser a ^AdapterExerciser b ^AdapterExerciser c ^AdapterExerciser d ^AdapterExerciser e ^AdapterExerciser f ^AdapterExerciser g] exerciser))
  (is (= (.methodOOOOOOOO exerciser OOOOOOOOadapter) 105))
  (def OOOOOOOOZadapter (fn [^AdapterExerciser a ^AdapterExerciser b ^AdapterExerciser c ^AdapterExerciser d ^AdapterExerciser e ^AdapterExerciser f ^AdapterExerciser g ^AdapterExerciser h] false))
  (is (= (.methodOOOOOOOOZ exerciser OOOOOOOOZadapter) 106))
  (def OOOOOOOOOadapter (fn [^AdapterExerciser a ^AdapterExerciser b ^AdapterExerciser c ^AdapterExerciser d ^AdapterExerciser e ^AdapterExerciser f ^AdapterExerciser g ^AdapterExerciser h] exerciser))
  (is (= (.methodOOOOOOOOO exerciser OOOOOOOOOadapter) 107))
  (def OOOOOOOOOZadapter (fn [^AdapterExerciser a ^AdapterExerciser b ^AdapterExerciser c ^AdapterExerciser d ^AdapterExerciser e ^AdapterExerciser f ^AdapterExerciser g ^AdapterExerciser h ^AdapterExerciser i] false))
  (is (= (.methodOOOOOOOOOZ exerciser OOOOOOOOOZadapter) 108))
  (def OOOOOOOOOOadapter (fn [^AdapterExerciser a ^AdapterExerciser b ^AdapterExerciser c ^AdapterExerciser d ^AdapterExerciser e ^AdapterExerciser f ^AdapterExerciser g ^AdapterExerciser h ^AdapterExerciser i] exerciser))
  (is (= (.methodOOOOOOOOOO exerciser OOOOOOOOOOadapter) 109))
  (def OOOOOOOOOOZadapter (fn [^AdapterExerciser a ^AdapterExerciser b ^AdapterExerciser c ^AdapterExerciser d ^AdapterExerciser e ^AdapterExerciser f ^AdapterExerciser g ^AdapterExerciser h ^AdapterExerciser i ^AdapterExerciser j] false))
  (is (= (.methodOOOOOOOOOOZ exerciser OOOOOOOOOOZadapter) 110))
  (def OOOOOOOOOOOadapter (fn [^AdapterExerciser a ^AdapterExerciser b ^AdapterExerciser c ^AdapterExerciser d ^AdapterExerciser e ^AdapterExerciser f ^AdapterExerciser g ^AdapterExerciser h ^AdapterExerciser i ^AdapterExerciser j] exerciser))
  (is (= (.methodOOOOOOOOOOO exerciser OOOOOOOOOOOadapter) 111)))
